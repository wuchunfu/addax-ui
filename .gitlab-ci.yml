stages:
  - build
  - deploy
  - merge


merge_master:
  stage: merge
  script:
    - git config --global user.email "xiaoxj@cfzq.com"
    - git config --global user.name "xiaoxj"
    - export NEW_REPO_URL=$(echo $CI_REPOSITORY_URL | sed 's/@[^/]*/@gitlab.ds.cfzq.com/' | sed 's/\(http[s]*\):\/\/[^@]*/\1:\/\/oauth2:'AHvew7viDNUTxZAYv6tn'/')
    - echo $NEW_REPO_URL
    - export CURRENT_VERSION=`git ls-remote --tags $NEW_REPO_URL|grep -v {|awk -F " " '{print $2}'|awk -F "/" '{print $3}'|sort -n -r |awk 'NR==1{print}'`
    - 'echo "Current version: $CURRENT_VERSION"'
    - curl -sS -k -o version_set_ui.sh https://gitlab.ds.cfzq.com/zhaowg/sp_push/-/raw/master/version_set_ui.sh
    - export NEXT_VERSION=`bash version_set_ui.sh $CURRENT_VERSION`

    # Push the release version to a new tag.
    # This relies on the .m2 directory containing the Maven repository
    # in the build directory being included in the .gitignore file in the
    # project, since we do not want to commit the contents of the Maven repository.
    - git add $CI_PROJECT_DIR
    - git tag -a $NEXT_VERSION -m "Create release version tag"
    - git remote set-url --push origin $NEW_REPO_URL
    - git push origin $NEXT_VERSION
  only:
    - master
  tags:
    - test



# build-test:
#   stage: build
#   artifacts:
#     paths:
#       - dist
#   script:
#     - rm -rf dist
#     - npm install
#     - npm run build:stage
#   except:
#     - master
#     - tags
#   tags:
#     - test

# deploy_test:
#   stage: deploy
#   script:
#     - rsync -avz dist/* root@10.60.172.165:/home/wbuser/zeus/
#   except:
#     - master
#     - tags
#   tags:
#     - test
